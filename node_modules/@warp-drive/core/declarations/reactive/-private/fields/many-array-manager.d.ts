import type { Store } from "../../../index.js";
import type { RelatedCollection as ManyArray } from "../../../store/-private.js";
import type { LocalRelationshipOperation } from "../../../types/graph.js";
import type { StableRecordIdentifier } from "../../../types/identifier.js";
import type { ReactiveResource } from "../record.js";
export interface FindHasManyOptions {
	reload?: boolean;
	backgroundReload?: boolean;
}
export declare class ManyArrayManager {
	record: ReactiveResource;
	store: Store;
	identifier: StableRecordIdentifier;
	editable: boolean;
	constructor(record: ReactiveResource, editable: boolean);
	_syncArray(array: ManyArray): void;
	reloadHasMany<T>(key: string, options?: FindHasManyOptions): Promise<ManyArray<T>>;
	mutate(mutation: LocalRelationshipOperation): void;
}
