import type { Store } from "../../../index.js";
import type { WarpDriveSignal } from "../../../store/-private.js";
import { ARRAY_SIGNAL } from "../../../store/-private.js";
import type { Cache } from "../../../types/cache.js";
import type { StableRecordIdentifier } from "../../../types/identifier.js";
import type { ArrayField, SchemaArrayField } from "../../../types/schema/fields.js";
import { ReactiveResource } from "../record.js";
import type { SchemaService } from "../schema.js";
import { Editable, Legacy, SOURCE } from "../symbols.js";
export interface ManagedArray extends Omit<Array<unknown>, "[]"> {
	[SOURCE]: unknown[];
	identifier: StableRecordIdentifier;
	path: string[];
	owner: ReactiveResource;
	[ARRAY_SIGNAL]: WarpDriveSignal;
	[Editable]: boolean;
	[Legacy]: boolean;
}
// eslint-disable-next-line @typescript-eslint/no-extraneous-class
export declare class ManagedArray {
	constructor(store: Store, schema: SchemaService, cache: Cache, field: ArrayField | SchemaArrayField, data: unknown[], identifier: StableRecordIdentifier, path: string[], owner: ReactiveResource, isSchemaArray: boolean, editable: boolean, legacy: boolean);
}
