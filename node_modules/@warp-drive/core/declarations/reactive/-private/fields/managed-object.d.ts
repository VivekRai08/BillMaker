import { OBJECT_SIGNAL, type WarpDriveSignal } from "../../../store/-private.js";
import type { Cache } from "../../../types/cache.js";
import type { StableRecordIdentifier } from "../../../types/identifier.js";
import type { ObjectField, SchemaObjectField } from "../../../types/schema/fields.js";
import type { ReactiveResource } from "../record.js";
import type { SchemaService } from "../schema.js";
import { Editable, EmbeddedPath, Legacy, Parent, SOURCE } from "../symbols.js";
export declare function notifyObject(obj: ManagedObject): void;
// const ignoredGlobalFields = new Set<string>(['setInterval', 'nodeType', 'nodeName', 'length', 'document', STRUCTURED]);
export interface ManagedObject {
	[SOURCE]: object;
	[Parent]: StableRecordIdentifier;
	[EmbeddedPath]: string[];
	[OBJECT_SIGNAL]: WarpDriveSignal;
	[Editable]: boolean;
	[Legacy]: boolean;
}
// eslint-disable-next-line @typescript-eslint/no-extraneous-class
export declare class ManagedObject {
	constructor(schema: SchemaService, cache: Cache, field: ObjectField | SchemaObjectField, data: object, identifier: StableRecordIdentifier, path: string[], owner: ReactiveResource, editable: boolean, legacy: boolean);
}
