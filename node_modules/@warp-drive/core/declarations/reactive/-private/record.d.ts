import type { Store } from "../../index.js";
import type { StableRecordIdentifier } from "../../types/identifier.js";
import type { SchemaArrayField, SchemaObjectField } from "../../types/schema/fields.js";
import { RecordStore } from "../../types/symbols.js";
import { Checkout, Destroy, Editable, EmbeddedField, EmbeddedPath, Identifier, Legacy, Parent } from "./symbols.js";
export { Editable, Legacy, Checkout } from "./symbols.js";
export interface ReactiveResource {
	[Symbol.toStringTag]: `ReactiveResource<${string}>`;
	/** @internal */
	[RecordStore]: Store;
	/** @internal */
	[Identifier]: StableRecordIdentifier;
	/** @internal */
	[Parent]: StableRecordIdentifier;
	/** @internal */
	[EmbeddedField]: SchemaArrayField | SchemaObjectField | null;
	/** @internal */
	[EmbeddedPath]: string[] | null;
	/** @internal */
	[Editable]: boolean;
	/** @internal */
	[Legacy]: boolean;
	/** @internal */
	___notifications: object;
	/** @internal */
	[Destroy](): void;
	/**
	* Create an editable copy of the record
	*
	* ReactiveResource instances are not editable by default. This method creates an editable copy of the record. To use,
	* import the `Checkout` symbol from `@warp-drive/schema-record` and call it on the record.
	*
	* ```ts
	* import { Checkout } from '@warp-drive/schema-record';
	*
	* const record = store.peekRecord('user', '1');
	* const editableRecord = await record[Checkout]();
	* ```
	*
	* @returns a promise that resolves to the editable record
	* @throws if the record is already editable or if the record is embedded
	*
	*/
	[Checkout]<T>(): Promise<T>;
}
/**
* A class that uses a the ResourceSchema for a ResourceType
* and a ResouceKey to transform data from the cache into a rich, reactive
* object.
*
* This class is not directly instantiable. To use it, you should
* configure the store's `instantiateRecord` and `teardownRecord` hooks
* with the matching hooks provided by this package.
*
* @hideconstructor
* @public
*/
// eslint-disable-next-line @typescript-eslint/no-extraneous-class
export declare class ReactiveResource {
	constructor(store: Store, identifier: StableRecordIdentifier, Mode: {
		[Editable]: boolean;
		[Legacy]: boolean;
	}, isEmbedded?: boolean, embeddedField?: SchemaArrayField | SchemaObjectField | null, embeddedPath?: string[] | null);
}
