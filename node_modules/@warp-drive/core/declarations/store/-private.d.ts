export { Store, storeFor } from "./-private/store-service.js";
export { recordIdentifierFor } from "./-private/caches/instance-cache.js";
export { CacheHandler, type StoreRequestContext } from "./-private/cache-handler/handler.js";
export { type CachePolicy } from "./-private/cache-handler/types.js";
export { isStableIdentifier, isDocumentIdentifier } from "./-private/caches/identifier-cache.js";
export { constructResource } from "./-private/utils/construct-resource.js";
export type { InstanceCache } from "./-private/caches/instance-cache.js";
export type { FindRecordQuery, Request, SaveRecordMutation, RequestCacheRequestState, RequestStateService } from "./-private/network/request-cache.js";
export type { CreateRecordProperties } from "./-private/store-service.js";
// TODO this should be a deprecated helper but we have so much usage of it
// to also eliminate
export { coerceId, ensureStringId } from "./-private/utils/coerce-id.js";
export type { NativeProxy } from "./-private/record-arrays/native-proxy-type-fix.js";
export { IdentifierArray as LiveArray, Collection as CollectionRecordArray, SOURCE, MUTATE } from "./-private/record-arrays/identifier-array.js";
export { RecordArrayManager, fastPush } from "./-private/managers/record-array-manager.js";
// leaked for private use / test use, should investigate removing
export { _clearCaches } from "./-private/caches/instance-cache.js";
export { peekCache, removeRecordDataFor } from "./-private/caches/cache-utils.js";
// @ember-data/model needs these temporarily
export { setRecordIdentifier, StoreMap } from "./-private/caches/instance-cache.js";
export { setCacheFor } from "./-private/caches/cache-utils.js";
export { normalizeModelName as _deprecatingNormalize } from "./-private/utils/normalize-model-name.js";
export type { StoreRequestInput } from "./-private/cache-handler/handler.js";
export { RelatedCollection } from "./-private/record-arrays/many-array.js";
export { log, logGroup } from "./-private/debug/utils.js";
export { getPromiseState, type PromiseState } from "./-private/new-core-tmp/promise-state.js";
export { DISPOSE, createRequestSubscription, type SubscriptionArgs, type RequestSubscription } from "./-private/new-core-tmp/request-subscription.js";
export { getRequestState, type RequestLoadingState, type RequestCacheRequestState as RequestState } from "./-private/new-core-tmp/request-state.js";
export { createMemo, type SignalHooks, waitFor } from "./-private/new-core-tmp/reactivity/configure.js";
export { memoized, gate, entangleSignal, defineSignal, defineNonEnumerableSignal } from "./-private/new-core-tmp/reactivity/signal.js";
export { ARRAY_SIGNAL, OBJECT_SIGNAL, Signals, type WarpDriveSignal, peekInternalSignal, withSignalStore, notifyInternalSignal, consumeInternalSignal, getOrCreateInternalSignal } from "./-private/new-core-tmp/reactivity/internal.js";
