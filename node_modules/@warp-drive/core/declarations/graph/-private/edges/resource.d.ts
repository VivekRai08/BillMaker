import type { ResourceRelationship } from "../../../types/cache/relationship.js";
import type { StableRecordIdentifier } from "../../../types/identifier.js";
import type { Links, Meta, PaginationLinks } from "../../../types/spec/json-api-raw.js";
import type { UpgradedMeta } from "../-edge-definition.js";
import type { RelationshipState } from "../-state.js";
/**
* Stores the data for one side of a "single" resource relationship.
*
* @class ResourceEdge
* @internal
*/
export interface ResourceEdge {
	definition: UpgradedMeta;
	identifier: StableRecordIdentifier;
	state: RelationshipState;
	localState: StableRecordIdentifier | null;
	remoteState: StableRecordIdentifier | null;
	meta: Meta | null;
	links: Links | PaginationLinks | null;
	transactionRef: number;
	accessed: boolean;
}
export declare function createResourceEdge(definition: UpgradedMeta, identifier: StableRecordIdentifier): ResourceEdge;
export declare function legacyGetResourceRelationshipData(source: ResourceEdge, getRemoteState: boolean): ResourceRelationship;
