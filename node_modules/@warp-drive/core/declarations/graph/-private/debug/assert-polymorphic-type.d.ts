import type { CacheCapabilitiesManager } from "../../../types.js";
import type { StableRecordIdentifier } from "../../../types/identifier.js";
import { type UpgradedMeta } from "../-edge-definition.js";
/*
Assert that `addedRecord` has a valid type so it can be added to the
relationship of the `record`.

The assert basically checks if the `addedRecord` can be added to the
relationship (specified via `relationshipMeta`) of the `record`.

This utility should only be used internally, as both record parameters must
be stable record identifiers and the `relationshipMeta` needs to be the meta
information about the relationship, retrieved via
`record.relationshipFor(key)`.
*/
declare let assertPolymorphicType: (parentIdentifier: StableRecordIdentifier, parentDefinition: UpgradedMeta, addedIdentifier: StableRecordIdentifier, store: CacheCapabilitiesManager) => void;
declare let assertInheritedSchema: (definition: UpgradedMeta, type: string) => void;
export { assertPolymorphicType, assertInheritedSchema };
