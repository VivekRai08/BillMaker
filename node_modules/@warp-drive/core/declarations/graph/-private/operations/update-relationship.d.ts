import type { Store } from "../../../index.js";
import type { StableRecordIdentifier } from "../../../types.js";
import type { UpdateResourceRelationshipOperation } from "../../../types/cache/operations.js";
import type { UpdateRelationshipOperation } from "../../../types/graph.js";
import type { ExistingResourceIdentifierObject, NewResourceIdentifierObject } from "../../../types/spec/json-api-raw.js";
import type { Graph } from "../graph.js";
type IdentifierCache = Store["identifierCache"];
/*
Updates the "canonical" or "remote" state of a relationship, replacing any existing
state and blowing away any local changes (excepting new records).
*/
export default function updateRelationshipOperation(graph: Graph, op: UpdateRelationshipOperation | UpdateResourceRelationshipOperation): void;
export declare function upgradeIdentifiers(arr: (ExistingResourceIdentifierObject | NewResourceIdentifierObject | StableRecordIdentifier)[], cache: IdentifierCache): StableRecordIdentifier[];
