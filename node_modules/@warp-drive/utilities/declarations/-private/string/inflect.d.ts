/**
* Marks a word as uncountable. Uncountable words are not pluralized
* or singularized.
*
* @public
* @since 4.13.0
*/
export declare function uncountable(word: string): void;
/**
* Marks a list of words as uncountable. Uncountable words are not pluralized
* or singularized.
*
* @public
* @since 4.13.0
*/
export declare function loadUncountable(uncountables: string[]): void;
/**
* Marks a word as irregular. Irregular words have unique
* pluralization and singularization rules.
*
* @public
* @since 4.13.0
*/
export declare function irregular(single: string, plur: string): void;
/**
* Marks a list of word pairs as irregular. Irregular words have unique
* pluralization and singularization rules.
*
* @public
* @since 4.13.0
*/
export declare function loadIrregular(irregularPairs: Array<[string, string]>): void;
/**
* Clears the caches for singularize and pluralize.
*
* @public
* @since 4.13.0
*/
export declare function clear(): void;
/**
* Resets the inflection rules to the defaults.
*
* @public
* @since 4.13.0
*/
export declare function resetToDefaults(): void;
/**
* Clears all inflection rules
* and resets the caches for singularize and pluralize.
*
* @public
* @since 4.13.0
*/
export declare function clearRules(): void;
/**
* Singularizes a word.
*
* @public
* @since 4.13.0
*/
export declare function singularize(word: string): string;
/**
* Pluralizes a word.
*
* @public
* @since 4.13.0
*/
export declare function pluralize(word: string): string;
/**
* Adds a pluralization rule.
*
* @public
* @since 4.13.0
*/
export declare function plural(regex: RegExp, string: string): void;
/**
* Adds a singularization rule.
*
* @public
* @since 4.13.0
*/
export declare function singular(regex: RegExp, string: string): void;
